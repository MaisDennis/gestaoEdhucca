"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validate = validate;
exports.format = format;
exports.generate = generate;

var digit = function digit(numbers) {
  var index = 2;
  var reverse = numbers.split('').reduce(function (buffer, number) {
    return [+number].concat(buffer);
  }, []);
  var sum = reverse.reduce(function (buffer, number) {
    buffer += number * index;
    index = index === 9 ? 2 : index + 1;
    return buffer;
  }, 0);
  var mod = sum % 11;
  return mod < 2 ? 0 : 11 - mod;
};
/**
 * Validates a CNPJ
 * @param {String|Number} cnpj The CNPJ value to be validated
 * @return {Boolean}
 */


function validate(cnpj) {
  // Remove period, slash and dash characters from CNPJ
  var cleaned = cnpj.toString().replace(/[\.\/\-]/g, '');

  if ( // Must be defined
  !cleaned || // Must have 14 characters
  cleaned.length !== 14 || // Must be digits and not be sequential characters (e.g.: 11111111111111, etc)
  /^(\d)\1+$/.test(cleaned)) {
    return false;
  }

  var registration = cleaned.substr(0, 12);
  registration += digit(registration);
  registration += digit(registration);
  return registration.substr(-2) === cleaned.substr(-2);
}
/**
 * Formats a CNPJ value
 * @param {String|Number} cnpj The CNPJ to be formatted
 * @return {String} The formatted CNPJ
 */


function format(cnpj) {
  return cnpj.toString() // Remove non digit characters
  .replace(/[^\d]/g, '') // Apply formatting
  .replace(/^(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})$/, '$1.$2.$3/$4-$5');
}
/**
 * Generates a valid CNPJ
 * @return {String} The generated CNPJ
 */


function generate() {
  var cnpj = '';
  var i = 12;

  while (i--) {
    cnpj += Math.floor(Math.random() * 9);
  }

  cnpj += digit(cnpj);
  cnpj += digit(cnpj);
  return format(cnpj);
}